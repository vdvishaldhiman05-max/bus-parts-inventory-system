{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/bus-parts-inventory-system/src/components/QRCodeGenerator.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\ninterface PartData {\r\n  id: string\r\n  manufacturer: string\r\n  manufacturing_date: string\r\n  condition: string\r\n  transaction_date: string\r\n  buy_date?: string\r\n  repair_date?: string\r\n  install_date?: string\r\n  description?: string\r\n}\r\n\r\ninterface QRCodeGeneratorProps {\r\n  partId: string\r\n  partData?: PartData\r\n}\r\n\r\nexport default function QRCodeGenerator({ partId, partData }: QRCodeGeneratorProps) {\r\n  const [qrCodeUrl, setQrCodeUrl] = useState<string>('')\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    generateQRCode()\r\n  }, [partId])\r\n\r\n  const generateQRCode = async () => {\r\n    setIsGenerating(true)\r\n    setError('')\r\n\r\n    try {\r\n      // Dynamic import to avoid SSR issues\r\n      const QRCode = await import('qrcode')\r\n      \r\n      // Generate QR code with the part ID\r\n      const qrDataUrl = await QRCode.toDataURL(partId, {\r\n        width: 200,\r\n        margin: 2,\r\n        color: {\r\n          dark: '#E31E24', // RTA Red\r\n          light: '#FFFFFF'\r\n        },\r\n        errorCorrectionLevel: 'M'\r\n      })\r\n\r\n      setQrCodeUrl(qrDataUrl)\r\n    } catch (err) {\r\n      console.error('QR Code generation error:', err)\r\n      setError('Failed to generate QR code. Please try again.')\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  const downloadQRCode = () => {\r\n    if (!qrCodeUrl) return\r\n\r\n    const link = document.createElement('a')\r\n    link.download = `QR_${partId}.png`\r\n    link.href = qrCodeUrl\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n\r\n  const printQRCode = () => {\r\n    if (!qrCodeUrl || !partData) return\r\n\r\n    const printWindow = window.open('', '_blank')\r\n    if (!printWindow) return\r\n\r\n    const printContent = `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <title>QR Code - ${partId}</title>\r\n          <style>\r\n            body {\r\n              font-family: Arial, sans-serif;\r\n              text-align: center;\r\n              padding: 20px;\r\n              margin: 0;\r\n            }\r\n            .qr-container {\r\n              border: 2px solid #E31E24;\r\n              border-radius: 8px;\r\n              padding: 20px;\r\n              margin: 20px auto;\r\n              max-width: 300px;\r\n              background: white;\r\n            }\r\n            .qr-image {\r\n              width: 200px;\r\n              height: 200px;\r\n              margin: 10px auto;\r\n            }\r\n            .part-info {\r\n              margin-top: 15px;\r\n              font-size: 12px;\r\n              color: #333;\r\n            }\r\n            .part-id {\r\n              font-size: 16px;\r\n              font-weight: bold;\r\n              color: #E31E24;\r\n              margin-bottom: 10px;\r\n            }\r\n            .rta-logo {\r\n              margin-top: 15px;\r\n              font-size: 14px;\r\n              color: #E31E24;\r\n              font-weight: bold;\r\n            }\r\n            @media print {\r\n              body { margin: 0; }\r\n              .no-print { display: none; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"qr-container\">\r\n            <div class=\"rta-logo\">RTA DUBAI</div>\r\n            <img src=\"${qrCodeUrl}\" alt=\"QR Code for ${partId}\" class=\"qr-image\" />\r\n            <div class=\"part-id\">${partId}</div>\r\n            <div class=\"part-info\">\r\n              <div><strong>Manufacturer:</strong> ${partData.manufacturer}</div>\r\n              <div><strong>Condition:</strong> ${partData.condition.toUpperCase()}</div>\r\n              <div><strong>Mfg Date:</strong> ${partData.manufacturing_date}</div>\r\n              ${partData.description ? `<div><strong>Description:</strong> ${partData.description}</div>` : ''}\r\n            </div>\r\n            <div style=\"margin-top: 15px; font-size: 10px; color: #666;\">\r\n              Bus Parts Inventory System\r\n            </div>\r\n          </div>\r\n          <script>\r\n            window.onload = function() {\r\n              window.print();\r\n              window.onafterprint = function() {\r\n                window.close();\r\n              }\r\n            }\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `\r\n\r\n    printWindow.document.write(printContent)\r\n    printWindow.document.close()\r\n  }\r\n\r\n  return (\r\n    <div className=\"qr-code-container\">\r\n      <div className=\"text-center mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-800\">\r\n          QR Code for Part: <span className=\"text-red-600 font-mono\">{partId}</span>\r\n        </h3>\r\n        {partData && (\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            {partData.manufacturer} - {partData.condition.toUpperCase()}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {isGenerating ? (\r\n        <div className=\"flex flex-col items-center py-8\">\r\n          <div className=\"loading mb-4\"></div>\r\n          <p className=\"text-gray-600\">Generating QR code...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <div className=\"text-4xl mb-4\">‚ùå</div>\r\n          <p className=\"text-red-600 mb-4\">{error}</p>\r\n          <button onClick={generateQRCode} className=\"btn-secondary\">\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      ) : qrCodeUrl ? (\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-block p-4 bg-white border-4 border-red-500 rounded-lg shadow-lg\">\r\n            <img \r\n              src={qrCodeUrl} \r\n              alt={`QR Code for ${partId}`}\r\n              className=\"qr-code-image mx-auto\"\r\n            />\r\n            <div className=\"mt-2 text-xs text-gray-600\">\r\n              Scan to view part details\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 flex flex-col sm:flex-row gap-3 justify-center\">\r\n            <button \r\n              onClick={downloadQRCode}\r\n              className=\"btn-primary\"\r\n            >\r\n              üíæ Download PNG\r\n            </button>\r\n            {partData && (\r\n              <button \r\n                onClick={printQRCode}\r\n                className=\"btn-secondary\"\r\n              >\r\n                üñ®Ô∏è Print Label\r\n              </button>\r\n            )}\r\n            <button \r\n              onClick={generateQRCode}\r\n              className=\"btn-secondary\"\r\n            >\r\n              üîÑ Regenerate\r\n            </button>\r\n          </div>\r\n\r\n          {partData && (\r\n            <div className=\"mt-6 p-4 bg-gray-50 rounded-lg text-left\">\r\n              <h4 className=\"font-semibold text-gray-800 mb-2\">Part Information:</h4>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 text-sm\">\r\n                <div><strong>ID:</strong> {partData.id}</div>\r\n                <div><strong>Manufacturer:</strong> {partData.manufacturer}</div>\r\n                <div><strong>Condition:</strong> {partData.condition.toUpperCase()}</div>\r\n                <div><strong>Mfg Date:</strong> {partData.manufacturing_date}</div>\r\n                <div><strong>Transaction Date:</strong> {partData.transaction_date}</div>\r\n                {partData.buy_date && <div><strong>Buy Date:</strong> {partData.buy_date}</div>}\r\n                {partData.repair_date && <div><strong>Repair Date:</strong> {partData.repair_date}</div>}\r\n                {partData.install_date && <div><strong>Install Date:</strong> {partData.install_date}</div>}\r\n                {partData.description && (\r\n                  <div className=\"sm:col-span-2\"><strong>Description:</strong> {partData.description}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/bus-parts-inventory-system/src/components/InventoryTable.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport QRCodeGenerator from '@/components/QRCodeGenerator'\r\n\r\ninterface PartData {\r\n  id: string\r\n  manufacturer: string\r\n  manufacturing_date: string\r\n  condition: string\r\n  transaction_date: string\r\n  buy_date?: string\r\n  repair_date?: string\r\n  install_date?: string\r\n  description?: string\r\n}\r\n\r\ninterface InventoryTableProps {\r\n  inventory: PartData[]\r\n  onDataChange?: () => void\r\n}\r\n\r\nexport default function InventoryTable({ inventory, onDataChange }: InventoryTableProps) {\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [filterCondition, setFilterCondition] = useState('all')\r\n  const [sortField, setSortField] = useState<keyof PartData>('id')\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc')\r\n  const [selectedParts, setSelectedParts] = useState<Set<string>>(new Set())\r\n  const [showQRFor, setShowQRFor] = useState<string | null>(null)\r\n\r\n  // Filter and sort inventory\r\n  const filteredInventory = inventory\r\n    .filter(item => {\r\n      const matchesSearch = Object.values(item).some(value => \r\n        value?.toString().toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      const matchesCondition = filterCondition === 'all' || item.condition === filterCondition\r\n      return matchesSearch && matchesCondition\r\n    })\r\n    .sort((a, b) => {\r\n      const aValue = a[sortField] || ''\r\n      const bValue = b[sortField] || ''\r\n      const comparison = aValue.toString().localeCompare(bValue.toString())\r\n      return sortDirection === 'asc' ? comparison : -comparison\r\n    })\r\n\r\n  const handleSort = (field: keyof PartData) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\r\n    } else {\r\n      setSortField(field)\r\n      setSortDirection('asc')\r\n    }\r\n  }\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedParts.size === filteredInventory.length) {\r\n      setSelectedParts(new Set())\r\n    } else {\r\n      setSelectedParts(new Set(filteredInventory.map(item => item.id)))\r\n    }\r\n  }\r\n\r\n  const handleSelectPart = (partId: string) => {\r\n    const newSelected = new Set(selectedParts)\r\n    if (newSelected.has(partId)) {\r\n      newSelected.delete(partId)\r\n    } else {\r\n      newSelected.add(partId)\r\n    }\r\n    setSelectedParts(newSelected)\r\n  }\r\n\r\n  const generateBulkQR = () => {\r\n    if (selectedParts.size === 0) return\r\n    \r\n    // Create a zip file with all selected QR codes\r\n    // This would require additional libraries in a real implementation\r\n    alert(`Generating QR codes for ${selectedParts.size} selected parts...`)\r\n  }\r\n\r\n  const getConditionColor = (condition: string) => {\r\n    switch (condition) {\r\n      case 'brand new': return 'text-green-600 bg-green-50'\r\n      case 'used': return 'text-yellow-600 bg-yellow-50'\r\n      case 'repaired': return 'text-orange-600 bg-orange-50'\r\n      default: return 'text-gray-600 bg-gray-50'\r\n    }\r\n  }\r\n\r\n  const getSortIcon = (field: keyof PartData) => {\r\n    if (sortField !== field) return '‚ÜïÔ∏è'\r\n    return sortDirection === 'asc' ? '‚Üë' : '‚Üì'\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n      {/* Search and Filter Controls */}\r\n      <div className=\"p-6 border-b border-gray-200\">\r\n        <div className=\"flex flex-col lg:flex-row gap-4\">\r\n          <div className=\"flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search parts by ID, manufacturer, description...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"flex gap-3\">\r\n            <select\r\n              value={filterCondition}\r\n              onChange={(e) => setFilterCondition(e.target.value)}\r\n              className=\"form-input min-w-[150px]\"\r\n            >\r\n              <option value=\"all\">All Conditions</option>\r\n              <option value=\"brand new\">Brand New</option>\r\n              <option value=\"used\">Used</option>\r\n              <option value=\"repaired\">Repaired</option>\r\n            </select>\r\n            {selectedParts.size > 0 && (\r\n              <button\r\n                onClick={generateBulkQR}\r\n                className=\"btn-primary whitespace-nowrap\"\r\n              >\r\n                üì± Generate {selectedParts.size} QR Codes\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4 flex items-center justify-between text-sm text-gray-600\">\r\n          <span>\r\n            Showing {filteredInventory.length} of {inventory.length} parts\r\n            {selectedParts.size > 0 && ` (${selectedParts.size} selected)`}\r\n          </span>\r\n          <button\r\n            onClick={() => setShowQRFor(null)}\r\n            className=\"text-red-600 hover:text-red-800\"\r\n          >\r\n            Hide QR Codes\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"inventory-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"w-12\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedParts.size === filteredInventory.length && filteredInventory.length > 0}\r\n                  onChange={handleSelectAll}\r\n                  className=\"rounded border-gray-300\"\r\n                />\r\n              </th>\r\n              <th \r\n                className=\"cursor-pointer hover:bg-red-600\"\r\n                onClick={() => handleSort('id')}\r\n              >\r\n                Part ID {getSortIcon('id')}\r\n              </th>\r\n              <th \r\n                className=\"cursor-pointer hover:bg-red-600\"\r\n                onClick={() => handleSort('manufacturer')}\r\n              >\r\n                Manufacturer {getSortIcon('manufacturer')}\r\n              </th>\r\n              <th \r\n                className=\"cursor-pointer hover:bg-red-600\"\r\n                onClick={() => handleSort('condition')}\r\n              >\r\n                Condition {getSortIcon('condition')}\r\n              </th>\r\n              <th \r\n                className=\"cursor-pointer hover:bg-red-600\"\r\n                onClick={() => handleSort('manufacturing_date')}\r\n              >\r\n                Mfg Date {getSortIcon('manufacturing_date')}\r\n              </th>\r\n              <th \r\n                className=\"cursor-pointer hover:bg-red-600\"\r\n                onClick={() => handleSort('transaction_date')}\r\n              >\r\n                Transaction Date {getSortIcon('transaction_date')}\r\n              </th>\r\n              <th className=\"hidden md:table-cell\">Description</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredInventory.map((part) => (\r\n              <tr key={part.id}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedParts.has(part.id)}\r\n                    onChange={() => handleSelectPart(part.id)}\r\n                    className=\"rounded border-gray-300\"\r\n                  />\r\n                </td>\r\n                <td className=\"font-mono font-semibold text-red-600\">\r\n                  {part.id}\r\n                </td>\r\n                <td>{part.manufacturer}</td>\r\n                <td>\r\n                  <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getConditionColor(part.condition)}`}>\r\n                    {part.condition.toUpperCase()}\r\n                  </span>\r\n                </td>\r\n                <td>{part.manufacturing_date}</td>\r\n                <td>{part.transaction_date}</td>\r\n                <td className=\"hidden md:table-cell\">\r\n                  {part.description || '-'}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => setShowQRFor(showQRFor === part.id ? null : part.id)}\r\n                    className={`btn-secondary text-xs ${showQRFor === part.id ? 'bg-red-100 border-red-500 text-red-700' : ''}`}\r\n                  >\r\n                    {showQRFor === part.id ? 'üì± Hide QR' : 'üì± Generate QR'}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* QR Code Display */}\r\n      {showQRFor && (\r\n        <div className=\"p-6 border-t border-gray-200 bg-gray-50\">\r\n          <div className=\"max-w-md mx-auto\">\r\n            <QRCodeGenerator \r\n              partId={showQRFor}\r\n              partData={inventory.find(p => p.id === showQRFor)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Empty State */}\r\n      {filteredInventory.length === 0 && (\r\n        <div className=\"p-12 text-center\">\r\n          <div className=\"text-6xl mb-4\">üîç</div>\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">\r\n            No parts found\r\n          </h3>\r\n          <p className=\"text-gray-500 mb-4\">\r\n            {searchTerm || filterCondition !== 'all' \r\n              ? 'Try adjusting your search or filter criteria'\r\n              : 'No inventory data available'\r\n            }\r\n          </p>\r\n          {(searchTerm || filterCondition !== 'all') && (\r\n            <button\r\n              onClick={() => {\r\n                setSearchTerm('')\r\n                setFilterCondition('all')\r\n              }}\r\n              className=\"btn-secondary\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAsBe,SAAS,eAAe,EAAE,SAAS,EAAE,YAAY,EAAuB;;IACrF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAC3D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACnE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IACpE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,4BAA4B;IAC5B,MAAM,oBAAoB,UACvB,MAAM,CAAC,CAAA;QACN,MAAM,gBAAgB,OAAO,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA,QAC7C,OAAO,WAAW,cAAc,SAAS,WAAW,WAAW;QAEjE,MAAM,mBAAmB,oBAAoB,SAAS,KAAK,SAAS,KAAK;QACzE,OAAO,iBAAiB;IAC1B,GACC,IAAI,CAAC,CAAC,GAAG;QACR,MAAM,SAAS,CAAC,CAAC,UAAU,IAAI;QAC/B,MAAM,SAAS,CAAC,CAAC,UAAU,IAAI;QAC/B,MAAM,aAAa,OAAO,QAAQ,GAAG,aAAa,CAAC,OAAO,QAAQ;QAClE,OAAO,kBAAkB,QAAQ,aAAa,CAAC;IACjD;IAEF,MAAM,aAAa,CAAC;QAClB,IAAI,cAAc,OAAO;YACvB,iBAAiB,kBAAkB,QAAQ,SAAS;QACtD,OAAO;YACL,aAAa;YACb,iBAAiB;QACnB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,cAAc,IAAI,KAAK,kBAAkB,MAAM,EAAE;YACnD,iBAAiB,IAAI;QACvB,OAAO;YACL,iBAAiB,IAAI,IAAI,kBAAkB,GAAG,CAAC,CAAA,OAAQ,KAAK,EAAE;QAChE;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,cAAc,IAAI,IAAI;QAC5B,IAAI,YAAY,GAAG,CAAC,SAAS;YAC3B,YAAY,MAAM,CAAC;QACrB,OAAO;YACL,YAAY,GAAG,CAAC;QAClB;QACA,iBAAiB;IACnB;IAEA,MAAM,iBAAiB;QACrB,IAAI,cAAc,IAAI,KAAK,GAAG;QAE9B,+CAA+C;QAC/C,mEAAmE;QACnE,MAAM,CAAC,wBAAwB,EAAE,cAAc,IAAI,CAAC,kBAAkB,CAAC;IACzE;IAEA,MAAM,oBAAoB,CAAC;QACzB,OAAQ;YACN,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAY,OAAO;YACxB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,IAAI,cAAc,OAAO,OAAO;QAChC,OAAO,kBAAkB,QAAQ,MAAM;IACzC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,WAAU;;;;;;;;;;;0CAGd,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wCAClD,WAAU;;0DAEV,6LAAC;gDAAO,OAAM;0DAAM;;;;;;0DACpB,6LAAC;gDAAO,OAAM;0DAAY;;;;;;0DAC1B,6LAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,6LAAC;gDAAO,OAAM;0DAAW;;;;;;;;;;;;oCAE1B,cAAc,IAAI,GAAG,mBACpB,6LAAC;wCACC,SAAS;wCACT,WAAU;;4CACX;4CACc,cAAc,IAAI;4CAAC;;;;;;;;;;;;;;;;;;;kCAMxC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAK;oCACK,kBAAkB,MAAM;oCAAC;oCAAK,UAAU,MAAM;oCAAC;oCACvD,cAAc,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,cAAc,IAAI,CAAC,UAAU,CAAC;;;;;;;0CAEhE,6LAAC;gCACC,SAAS,IAAM,aAAa;gCAC5B,WAAU;0CACX;;;;;;;;;;;;;;;;;;0BAOL,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAM,WAAU;;sCACf,6LAAC;sCACC,cAAA,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDACZ,cAAA,6LAAC;4CACC,MAAK;4CACL,SAAS,cAAc,IAAI,KAAK,kBAAkB,MAAM,IAAI,kBAAkB,MAAM,GAAG;4CACvF,UAAU;4CACV,WAAU;;;;;;;;;;;kDAGd,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;4CAC3B;4CACU,YAAY;;;;;;;kDAEvB,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;4CAC3B;4CACe,YAAY;;;;;;;kDAE5B,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;4CAC3B;4CACY,YAAY;;;;;;;kDAEzB,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;4CAC3B;4CACW,YAAY;;;;;;;kDAExB,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,WAAW;;4CAC3B;4CACmB,YAAY;;;;;;;kDAEhC,6LAAC;wCAAG,WAAU;kDAAuB;;;;;;kDACrC,6LAAC;kDAAG;;;;;;;;;;;;;;;;;sCAGR,6LAAC;sCACE,kBAAkB,GAAG,CAAC,CAAC,qBACtB,6LAAC;;sDACC,6LAAC;sDACC,cAAA,6LAAC;gDACC,MAAK;gDACL,SAAS,cAAc,GAAG,CAAC,KAAK,EAAE;gDAClC,UAAU,IAAM,iBAAiB,KAAK,EAAE;gDACxC,WAAU;;;;;;;;;;;sDAGd,6LAAC;4CAAG,WAAU;sDACX,KAAK,EAAE;;;;;;sDAEV,6LAAC;sDAAI,KAAK,YAAY;;;;;;sDACtB,6LAAC;sDACC,cAAA,6LAAC;gDAAK,WAAW,CAAC,6CAA6C,EAAE,kBAAkB,KAAK,SAAS,GAAG;0DACjG,KAAK,SAAS,CAAC,WAAW;;;;;;;;;;;sDAG/B,6LAAC;sDAAI,KAAK,kBAAkB;;;;;;sDAC5B,6LAAC;sDAAI,KAAK,gBAAgB;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDACX,KAAK,WAAW,IAAI;;;;;;sDAEvB,6LAAC;sDACC,cAAA,6LAAC;gDACC,SAAS,IAAM,aAAa,cAAc,KAAK,EAAE,GAAG,OAAO,KAAK,EAAE;gDAClE,WAAW,CAAC,sBAAsB,EAAE,cAAc,KAAK,EAAE,GAAG,2CAA2C,IAAI;0DAE1G,cAAc,KAAK,EAAE,GAAG,eAAe;;;;;;;;;;;;mCA5BrC,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;YAsCvB,2BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,wIAAA,CAAA,UAAe;wBACd,QAAQ;wBACR,UAAU,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;;;;;;;;;;;;;;;;YAO9C,kBAAkB,MAAM,KAAK,mBAC5B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCAGzD,6LAAC;wBAAE,WAAU;kCACV,cAAc,oBAAoB,QAC/B,iDACA;;;;;;oBAGL,CAAC,cAAc,oBAAoB,KAAK,mBACvC,6LAAC;wBACC,SAAS;4BACP,cAAc;4BACd,mBAAmB;wBACrB;wBACA,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAQb;GAzPwB;KAAA","debugId":null}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/bus-parts-inventory-system/src/app/generate/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport InventoryTable from '@/components/InventoryTable'\r\n\r\ninterface PartData {\r\n  id: string\r\n  manufacturer: string\r\n  manufacturing_date: string\r\n  condition: string\r\n  transaction_date: string\r\n  buy_date?: string\r\n  repair_date?: string\r\n  install_date?: string\r\n  description?: string\r\n}\r\n\r\nexport default function GeneratePage() {\r\n  const [inventory, setInventory] = useState<PartData[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    loadInventoryData()\r\n  }, [])\r\n\r\n  const loadInventoryData = () => {\r\n    try {\r\n      const data = localStorage.getItem('inventoryData')\r\n      if (data) {\r\n        const parsedData = JSON.parse(data)\r\n        if (Array.isArray(parsedData)) {\r\n          setInventory(parsedData)\r\n        } else {\r\n          setError('Invalid inventory data format')\r\n        }\r\n      } else {\r\n        setError('No inventory data found')\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load inventory data')\r\n      console.error('Error loading inventory:', err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const refreshData = () => {\r\n    setLoading(true)\r\n    setError('')\r\n    loadInventoryData()\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[60vh]\">\r\n        <div className=\"text-center\">\r\n          <div className=\"loading mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading inventory data...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto\">\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\r\n          Generate QR Codes\r\n        </h1>\r\n        <p className=\"text-gray-600\">\r\n          Create QR codes for your bus parts inventory\r\n        </p>\r\n      </div>\r\n\r\n      {error ? (\r\n        <div className=\"text-center\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-8 max-w-md mx-auto\">\r\n            <div className=\"text-6xl mb-4\">üìã</div>\r\n            <h2 className=\"text-xl font-semibold text-red-800 mb-2\">\r\n              No Inventory Data\r\n            </h2>\r\n            <p className=\"text-red-700 mb-6\">\r\n              {error}. Please upload a CSV file first to generate QR codes.\r\n            </p>\r\n            <div className=\"space-y-3\">\r\n              <a href=\"/upload\" className=\"btn-primary block\">\r\n                üìÅ Upload CSV File\r\n              </a>\r\n              <button \r\n                onClick={refreshData}\r\n                className=\"btn-secondary block w-full\"\r\n              >\r\n                üîÑ Refresh Data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Inventory Stats */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n            <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n              <div className=\"text-2xl font-bold text-red-600\">{inventory.length}</div>\r\n              <div className=\"text-sm text-gray-600\">Total Parts</div>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n              <div className=\"text-2xl font-bold text-green-600\">\r\n                {inventory.filter(item => item.condition === 'brand new').length}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Brand New</div>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n              <div className=\"text-2xl font-bold text-yellow-600\">\r\n                {inventory.filter(item => item.condition === 'used').length}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Used</div>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n              <div className=\"text-2xl font-bold text-orange-600\">\r\n                {inventory.filter(item => item.condition === 'repaired').length}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Repaired</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\r\n            <button \r\n              onClick={refreshData}\r\n              className=\"btn-secondary\"\r\n            >\r\n              üîÑ Refresh Data\r\n            </button>\r\n            <a href=\"/upload\" className=\"btn-secondary\">\r\n              üìÅ Upload New CSV\r\n            </a>\r\n            <button\r\n              onClick={() => {\r\n                // Generate all QR codes at once\r\n                const event = new CustomEvent('generateAllQR')\r\n                window.dispatchEvent(event)\r\n              }}\r\n              className=\"btn-primary\"\r\n            >\r\n              üì± Generate All QR Codes\r\n            </button>\r\n          </div>\r\n\r\n          {/* Inventory Table */}\r\n          <InventoryTable \r\n            inventory={inventory}\r\n            onDataChange={refreshData}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {/* Help Section */}\r\n      <div className=\"mt-12 text-center\">\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">\r\n            How to use QR codes\r\n          </h3>\r\n          <div className=\"text-red-700 mb-4 space-y-2\">\r\n            <p>1. Generate QR codes for your parts using the buttons in the table</p>\r\n            <p>2. Download and print the QR code images</p>\r\n            <p>3. Attach the printed QR codes to the physical parts</p>\r\n            <p>4. Use the scanner to quickly access part information</p>\r\n          </div>\r\n          <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\r\n            <a href=\"/\" className=\"btn-secondary\">\r\n              üì∑ Go to Scanner\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}